/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    /*
    CRAM_CNV_EXOMEDEPTH
    */

    withName: 'EXOMEDEPTH_COUNT' {
        ext.prefix = { "${meta.id}.${meta.chromosome}" }
        publishDir = [
            path:"$params.outdir/exomedepth/counts",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CUSTOM_MERGECOUNTS' {
        ext.prefix = { "${meta.id}.${meta.chromosome}" }
        publishDir = [
            path:"$params.outdir/exomedepth/counts",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'EXOMEDEPTH_CALL' {
        ext.prefix = { "${meta.id}.${meta.chromosome}" }
        publishDir = [
            path:"$params.outdir/exomedepth/cnv_call",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    /*
    POSTPROCESSING
    */

    withName: 'CUSTOM_MERGECNV' {
        publishDir = [
            path:"$params.outdir/exomedepth/cnv_call",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BEDGOVCF' {
        ext.args = { "--skip 1" }
        publishDir = [
            path: {"$params.outdir/exomedepth/cnv_call"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'ENSEMBLVEP_VEP' {
        ext.prefix = {"${meta.id}.vep"}
        ext.args = {[
            '--vcf',
            '--format vcf',
            '--coding_only',
            '--offline',
            '--no_stats',
            '--per_gene',
            '--merged',
            '--exclude_predicted',
            '--fields "SYMBOL,Gene"',
            '--transcript_filter "stable_id match ENST"'
        ].join(' ').trim()}
        publishDir = [
            path: {"$params.outdir/exomedepth/cnv_call_vep"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TABIX_TABIX' {
        publishDir = [
            path: {"$params.outdir/exomedepth/cnv_call"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TABIX_VEP' {
        publishDir = [
            path: {"$params.outdir/exomedepth/cnv_call_vep"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
