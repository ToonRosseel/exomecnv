nextflow_process {

    name "Test Process CUSTOM_REFORMATCOUNTS"
    script "../main.nf"
    process "CUSTOM_REFORMATCOUNTS"

    tag "modules"
    tag "modules_local"
    tag "reformatcounts"

    test("homo_sapiens - reformat") {

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id: 'Sample1', batch: 'prep_M' , family: 'Fam1', samples:["Sample1", "Sample2", "Sample3", "Sample4", "Sample5"], families:["Fam1", "Fam2", "Fam3", "Fam4", "Fam5"], chr:'autosomal'],
                    file(params.counts1_to_reformat, checkIfExists:true)
                ])
                """
            }
        }
        then {
            assert process.success
            assert snapshot(process.out).match()
        }
    }

    test("homo_sapiens - reformat - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id: 'Sample1', batch: 'prep_M' , family: 'Fam1', samples:["Sample1", "Sample2", "Sample3", "Sample4", "Sample5"], families:["Fam1", "Fam2", "Fam3", "Fam4", "Fam5"], chr:'autosomal'],
                    file(params.counts1_to_reformat, checkIfExists:true)
                ])
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

}
